{"version":3,"sources":["Components/DatePicker/DatePicker.js","Utilites/Functions/GetSpecificQuestions.js","Apis/GetQuestions.js","Utilites/Functions/QuestionToWeight.js","Utilites/Functions/appendDataToQuestions.js","Utilites/Functions/SpliteDateToMonth.js","Utilites/Functions/SortByDate.js","Apis/GetReviews.js","Components/Spinner/index.js","Utilites/Functions/CalculateWeight.js","Components/BarChart/VerticalBarchart.js","Components/ReviewsDetails.js","App.js","reportWebVitals.js","index.js"],"names":["DatePicker","props","disabled","btnDisabled","onSubmit","Get_Data","className","type","name","id","htmlFor","GetSpecificQuestions","el","question","QuestionsList","Header","headers","Authorization","concat","Get_Questions","a","axios","get","then","res","data","questions","catch","err","alert","console","log","QuestionWeight","QuestionToWeight","Question","filter","text","toLowerCase","appendDataToQuestions","q_index","findIndex","item","c_index","choices","choice","choice_text","weight","SpliteDateToMonth","submitted_at","answers","monthyear","Date","toLocaleString","month","year","push","map","entries","SortByDate","b","undefined","ReviewsList","Result","Get_data","date_from","date_end","URL_Q","line_chart_data","sort","reduce","SplitDataByMonth","Spinner","CalculateWeight","QuestionNumber","flat","total","current","_","length","VerticalBarchart","BarLinesColor","ListData","Object","width","height","style","fontSize","transform","fill","index","key","opacity","y2","x2","dy","y","x","textAnchor","d","Array","i","value","FirstBarValue","Math","max","toFixed","SecondBarValue","rx","ReviewsDetails","Fragment","display","margin","ans","App","useState","spinner_status","setSpinner","sDate","setSDate","endDateDisabled","setdisabled","SubmitBtnDisabled","setSubmitBtndisabled","GetData","e","preventDefault","start_date","target","elements","StartDate","end_date","EndDate","useEffect","GetQuestions","StartDateInput","document","getElementById","EndDateInput","M","Datepicker","init","format","autoClose","yearRange","getFullYear","showClearBtn","onClose","minDate","elems","querySelectorAll","Tooltip","Collapsible","href","onClick","Modal","openDetailes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.e4f663ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nfunction DatePicker(props) {\r\n\r\n    const { disabled, btnDisabled } = props\r\n\r\n    return (\r\n        <form onSubmit={props.Get_Data} className=\"d-flex justify-content-center align-items-center \">\r\n            <div className=\"row\">\r\n                <div className=\"input-field col l4\">\r\n                    <input type=\"text\" className=\"datepicker\" name=\"StartDate\" id=\"StartDate\" />\r\n                    <label htmlFor=\"StartDate\">Select Start Date</label>\r\n                </div>\r\n                <div className=\"input-field col l4\">\r\n                    <input type=\"text\" className=\"datepicker\" name=\"EndDate\" id=\"EndDate\" disabled={disabled} />\r\n                    <label htmlFor=\"EndDate\">Select End Date</label>\r\n                </div>\r\n                <div className=\"col l4\">\r\n                    <button type=\"submit\" disabled={btnDisabled} className=\"btn btn-primary\"  >Get Data</button>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default DatePicker","const GetSpecificQuestions = (el) => {\r\n    return el.question === 2 || el.question === 4;\r\n}\r\n\r\n\r\n\r\nexport default GetSpecificQuestions\r\n","import axios from 'axios';\r\n\r\n\r\nconst URL = 'https://staging.mymelior.com/v1/questions';\r\n\r\nexport let QuestionsList = [];\r\n\r\nconst AuthStr = 'Bearer '.concat('SLSmxK17vjRInEWIiFQjwE1QIDfeSM');\r\n\r\nconst Header = {\r\n    headers: {\r\n        Authorization: AuthStr\r\n    }\r\n};\r\n\r\n\r\n\r\nconst Get_Questions = async () => {\r\n\r\n    await axios.get(URL, Header).then(res => {\r\n\r\n       \r\n        // console.log('Questions: ' + res.data);\r\n\r\n        QuestionsList = res.data[0].questions;\r\n\r\n        //console.log(JSON.stringify(QuestionsList , null , 4))\r\n\r\n    }).catch(err => {\r\n        alert(err);\r\n        console.log(err)\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default Get_Questions\r\n","const QuestionWeight = [\r\n    { 'text': 'Good', 'weight': 1 },\r\n    { 'text': 'Neutral', 'weight': 0 },\r\n    { 'text': 'Bad', 'weight': - 1 }\r\n]\r\n\r\nconst QuestionToWeight = (Question) =>\r\n    QuestionWeight.filter((el) => {\r\n        return el.text.toLowerCase() === Question.toLowerCase()\r\n    })\r\n\r\n\r\nexport default QuestionToWeight\r\n","import { QuestionsList } from './../../Apis/GetQuestions';\r\nimport QuestionToWeight from './QuestionToWeight';\r\n\r\nconst appendDataToQuestions = el => {\r\n    const q_index = QuestionsList.findIndex(item => item.id === el.question);\r\n    const c_index = QuestionsList[q_index].choices.findIndex(item => item.id === el.choice);\r\n    el.text = QuestionsList[q_index].text\r\n    el.choice_text = QuestionsList[q_index].choices[c_index].text\r\n    el.weight = QuestionToWeight(el.choice_text)[0].weight\r\n    return el\r\n}\r\n\r\n\r\nexport default appendDataToQuestions\r\n","import GetSpecificQuestions from \"./GetSpecificQuestions\";\r\nimport appendDataToQuestions from \"./appendDataToQuestions\";\r\n\r\n\r\nconst SpliteDateToMonth = (el, { submitted_at, answers }) => {\r\n\r\n    let dateObj = new Date(submitted_at);\r\n    let monthyear = dateObj.toLocaleString(\"en-us\", { month: \"short\", year: '2-digit' });\r\n\r\n    if (!el[monthyear]) {\r\n        el[monthyear] = { monthyear, entries: 1, data: [] }\r\n    } else {\r\n        el[monthyear].data.push(\r\n            answers.filter(GetSpecificQuestions).map(appendDataToQuestions)\r\n        );\r\n        el[monthyear].entries++;\r\n    }\r\n    return el;\r\n}\r\n\r\n\r\nexport default SpliteDateToMonth\r\n","const SortByDate = (a, b) => {\r\n    if (a - b !== undefined) {\r\n\r\n        return new Date(b.submitted_at) - new Date(a.submitted_at);\r\n    } else {\r\n        alert('please Choose Different Dates')\r\n    }\r\n\r\n}\r\n\r\nexport default SortByDate\r\n","import axios from 'axios';\r\nimport SplitDataByMonth from './../Utilites/Functions/SpliteDateToMonth'\r\nimport SortByDate from './../Utilites/Functions/SortByDate'\r\n\r\nconst URL = 'https://staging.mymelior.com/v1/branches/1/progress';\r\n\r\nexport let ReviewsList = [];\r\nexport let Result = []\r\nconst AuthStr = 'Bearer '.concat('SLSmxK17vjRInEWIiFQjwE1QIDfeSM');\r\n\r\nconst Header = {\r\n    headers: {\r\n        Authorization: AuthStr\r\n    }\r\n};\r\n\r\n\r\n\r\nconst Get_data = async (date_from, date_end) => {\r\n\r\n    const URL_Q = `${URL}?date_from=${date_from}&date_to=${date_end}`;\r\n\r\n    await axios.get(URL_Q, Header).then(res => {\r\n\r\n        Result = res.data.line_chart_data\r\n        console.log(Result)\r\n        if (Result != undefined || Result != null) {\r\n\r\n            ReviewsList = Result.sort(SortByDate).reduce(SplitDataByMonth, {})\r\n        } else {\r\n            alert('Please Select Different Date')\r\n        }\r\n\r\n\r\n    }).catch(err => {\r\n\r\n        console.log(err)\r\n        alert(err)\r\n    })\r\n}\r\n\r\n\r\n\r\nexport default Get_data\r\n","import React from \"react\"\r\nimport './style.css';\r\n\r\nfunction Spinner() {\r\n    return (\r\n        <div className=\"spinner-container\">\r\n            <div className=\"progress\">\r\n                <div className=\"indeterminate\"></div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner\r\n","\r\nconst CalculateWeight = (QuestionNumber, data) => data.flat(1).filter(el => el.question === QuestionNumber).reduce((total, current,_, { length }) => {\r\n    return total + current.weight /length * 100\r\n}, 0)\r\n\r\n\r\n\r\nexport default CalculateWeight\r\n","import React from 'react'\r\nimport { ReviewsList } from '../../Apis/GetReviews'\r\nimport CalculateWeight from '../../Utilites/Functions/CalculateWeight';\r\n\r\nfunction VerticalBarchart() {\r\n\r\n    const ChartLineHeight = 450;\r\n    const DistanceBetwenBars = 90;\r\n    const BarWidth = 20;\r\n    const FirstBarColor = '#16a085';\r\n    const SecondBarColor = '#f1c40f';\r\n    const BarLinesColor = '#2c3e50';\r\n    const yAxisPersentage = 11;\r\n    const ListData = Object.entries(ReviewsList);\r\n    return (\r\n        <div>\r\n            <svg width=\"960\" height=\"500\" style={{ fontSize: 14 }}>\r\n                <g transform=\"translate(40,20)\">\r\n\r\n                    <g className=\"x axis\" transform={`translate(0,${ChartLineHeight})`} fill={BarLinesColor}>\r\n\r\n                        {ListData.map(([key, value], index) => {\r\n                            return (\r\n                                <g key={index} className=\"tick\" transform={`translate(${DistanceBetwenBars * (index + 1)},0)`} style={{ opacity: 1 }}>\r\n                                    <line y2=\"6\" x2=\"0\"></line>\r\n                                    <text dy=\".51em\" y=\"20\" x=\"0\" style={{ textAnchor: \"middle\" }}>{key}</text>\r\n                                </g>\r\n                            );\r\n                        })}\r\n\r\n                        <path className=\"domain\" d=\"M0,6V0H900V6\"></path>\r\n                    </g>\r\n                    <g className=\"y axis\" fill={BarLinesColor}>\r\n\r\n                        {[...Array(yAxisPersentage)].map((el, i) =>\r\n\r\n                            <g key={i} className=\"tick\" data-height={40 + (i * 40)} transform={`translate(0,${40 + (i * 40)})`} style={{ opacity: 1 }}><line x2=\"-6\" y2=\"0\"></line>\r\n                                <text dy=\".32em\" x=\"-9\" y=\"0\" style={{ textAnchor: 'end' }}>{100 - (i * 10)}</text>\r\n                            </g>\r\n\r\n                        )}\r\n\r\n                        <path className=\"domain\" d=\"M-6,0H0V450H-6\"></path>\r\n                        <text transform=\"rotate(-90)\" y=\"6\" dy=\".71em\" style={{ textAnchor: 'end' }}>Frequency</text>\r\n                    </g>\r\n\r\n                    {\r\n\r\n                        ListData.map(([key, value], index) => {\r\n                            const FirstBarValue = Math.max(0, CalculateWeight(2, value.data).toFixed(1))\r\n                            const SecondBarValue = Math.max(0, CalculateWeight(2, value.data).toFixed(1))\r\n                            return (\r\n\r\n                                <g key={index} className=\"tick\" transform={`translate( ${DistanceBetwenBars * (index + 1.5) - 40} , ${ChartLineHeight - FirstBarValue * 4.1} )`} style={{ opacity: 1 }}>\r\n\r\n                                    <g transform={`translate( -20 , 0)`}>\r\n                                        <text transform={`translate( -15 , -10)`}>({FirstBarValue}% </text>\r\n                                        <rect className=\"bar\" x={0} width={BarWidth} y=\"0\" rx={3} height={FirstBarValue * 4.1} fill={FirstBarColor}></rect>\r\n                                    </g>\r\n                                    <g transform={`translate( -15 , 0)`}>\r\n                                        <text transform={`translate(30 , -10)`}>{SecondBarValue}% )</text>\r\n                                        <rect className=\"bar\" x={BarWidth} width={BarWidth} y=\"0\" rx={3} height={SecondBarValue * 4.1} fill={SecondBarColor}></rect>\r\n                                    </g>\r\n\r\n                                </g>\r\n                            )\r\n                        }\r\n                        )\r\n                    }\r\n\r\n                </g>\r\n            </svg>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VerticalBarchart\r\n","import React from 'react'\r\nimport { ReviewsList } from '../Apis/GetReviews'\r\n\r\nfunction ReviewsDetails() {\r\n    return (\r\n        <div className=\"modal-content\">\r\n            <h4>More Detailes</h4>\r\n            <ul className=\"collapsible\">\r\n                {Object.entries(ReviewsList).map(([key, value], index) =>\r\n                    <React.Fragment key={index}>\r\n\r\n                        <li>\r\n                            <div className=\"collapsible-header\"><i className=\"material-icons\">date_range</i>{value.monthyear} <span style={{\r\n                                display: 'inline-block',\r\n                                margin: '0 0 0 auto'\r\n                            }}>{(value.entries * 2) - 2}</span></div>\r\n                            <div className=\"collapsible-body\">\r\n\r\n                                <table>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th className=\"center\">Question ID </th>\r\n                                            <th className=\"center\">Question Text</th>\r\n                                            <th className=\"center\">Answer ID</th>\r\n                                            <th className=\"center\">Answer</th>\r\n                                            <th className=\"center\">Weight</th>\r\n                                        </tr>\r\n                                    </thead>\r\n\r\n                                    <tbody>\r\n\r\n                                        {value.data.map(el =>\r\n\r\n                                            el.map((ans, index) =>\r\n\r\n                                                <tr key={index} >\r\n                                                    <td className=\"center\">{ans.question}</td>\r\n                                                    <td className=\"center\">{ans.text}</td>\r\n                                                    <td className=\"center\">{ans.choice}</td>\r\n                                                    <td className=\"center\">{ans.choice_text}</td>\r\n                                                    <td className=\"center\">{ans.weight}</td>\r\n                                                </tr>\r\n\r\n                                            )\r\n\r\n                                        )}\r\n                                    </tbody>\r\n                                </table>\r\n\r\n                            </div>\r\n                        </li>\r\n\r\n                    </React.Fragment>\r\n                )}\r\n            </ul>\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default ReviewsDetails\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport DatePicker from './Components/DatePicker/DatePicker';\nimport Get_data, { Result, ReviewsList } /* , { ReviewsList }*/ from './Apis/GetReviews';\nimport Spinner from './Components/Spinner/index';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport VerticalBarchart from './Components/BarChart/VerticalBarchart';\nimport GetQuestions /*,{ QuestionsList } */ from './Apis/GetQuestions';\nimport M from \"materialize-css\";\n\nimport ReviewsDetails from './Components/ReviewsDetails';\nfunction App() {\n\n  const [spinner_status, setSpinner] = useState(false)\n  const [sDate, setSDate] = useState('')\n  const [endDateDisabled, setdisabled] = useState(true)\n  const [SubmitBtnDisabled, setSubmitBtndisabled] = useState(true)\n\n  const GetData = async (e) => {\n    e.preventDefault();\n    setSpinner(true)\n    const start_date = e.target.elements.StartDate.value;\n    const end_date = e.target.elements.EndDate.value;\n    await Get_data(start_date, end_date);\n    setSpinner(false)\n  }\n\n  useEffect(() => {\n    //M.AutoInit();\n    GetQuestions();\n    var StartDateInput = document.getElementById('StartDate');\n    var EndDateInput = document.getElementById('EndDate');\n    M.Datepicker.init(StartDateInput, {\n      format: 'yyyy-mm-dd',\n      autoClose: true,\n      yearRange: [2017, new Date().getFullYear()],\n      showClearBtn: true,\n      onClose: () => {\n        setdisabled(false);\n        setSDate(StartDateInput.value)\n        console.log(sDate ? sDate : '')\n      }\n    });\n\n    M.Datepicker.init(EndDateInput, {\n      format: 'yyyy-mm-dd',\n      autoClose: true,\n      minDate: new Date(sDate),\n      yearRange: [new Date(sDate).getFullYear(), new Date().getFullYear()],\n      showClearBtn: true,\n      onClose: () => {\n        setdisabled(false);\n        setSDate(EndDateInput.value);\n        setSubmitBtndisabled(false)\n      }\n    });\n\n\n    var elems = document.querySelectorAll('.detailes-modal-btn');\n    M.Tooltip.init(elems);\n\n    elems = document.querySelectorAll('.collapsible');\n    M.Collapsible.init(elems);\n\n\n  }, [sDate]);\n\n  const openDetailes = () => {\n    var elems = document.querySelectorAll('.modal');\n    M.Modal.init(elems);\n  }\n  return (\n\n    <div className=\"container\">\n\n      <div className=\"w-100 m-auto py-5\">\n        <DatePicker Get_Data={GetData} disabled={endDateDisabled} btnDisabled={SubmitBtnDisabled} />\n        <VerticalBarchart />\n\n        {spinner_status && <Spinner />}\n\n\n        {\n          Object.entries(ReviewsList).length > 0 &&\n          // <a className=\"waves-effect waves-light btn modal-trigger\" href=\"#detailes-modal\" onClick={() => openDetailes()}>Modal</a>\n          <div className=\"fixed-action-btn\">\n            <a className=\"btn-floating btn-large red modal-trigger detailes-modal-btn\" href=\"#detailes-modal\" data-position=\"top\" data-tooltip=\"More Info\" onClick={() => openDetailes()} >\n              <i className=\"large material-icons\">grid_on</i>\n            </a>\n          </div>\n        }\n\n        <div id=\"detailes-modal\" className=\"modal\">\n          <ReviewsDetails />\n        </div>\n\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}